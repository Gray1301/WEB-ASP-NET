@model FinalProject.Models.TaiKhoan

@{
    List<string> decentralization = new List<string>
{
                "Người quản trị","Khách hàng"
            };
    ViewBag.decentralization = decentralization;
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h2>Sửa tài khoản</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" style="margin-left: 20px; margin-top: 15px">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.TenTK)

        <div class="form-group">
            @Html.LabelFor(model => model.MatKhau, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.MatKhau, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })*@
                <input class="form-control text-box single-line" data-val="true" id="MatKhau" name="MatKhau" type="password" value="@Model.MatKhau" readonly>
                @Html.ValidationMessageFor(model => model.MatKhau, "", new { @class = "text-danger" })
            </div>
        </div>
        @*<div class="col-md-6">
                <div class="form-group row">
                    <label class="col-md-3 col-form-label">@Html.LabelFor(model => model.MatKhau)</label><br />
                    <div class="col-md-10 password">
                        <input class="form-control text-box single-line" data-val="true"   id="MatKhau" name="MatKhau" type="password" value="@Model.MatKhau"  width="">
                        @Html.ValidationMessageFor(model => model.MatKhau, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.HoTen, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HoTen, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.HoTen, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SDT, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SDT, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.SDT, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NgaySinh, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NgaySinh, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.NgaySinh, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tinh_ThanhPho, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Tinh_ThanhPho, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Tinh_ThanhPho, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DiaChi, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DiaChi, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.DiaChi, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhanQuyen, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.PhanQuyen, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.PhanQuyen, new SelectList(ViewBag.decentralization), "- Chọn quyền -", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PhanQuyen, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TinhTrang, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.TinhTrang)
                    @Html.ValidationMessageFor(model => model.TinhTrang, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Lưu" class="btn btn-primary" /> |
                <a href="@Url.Action("Index","TaiKhoans")" class="btn btn-primary">Hủy</a>
            </div>
        </div>
    </div>
}
@if (ViewBag.Error != null)
{
    <br />
    <div class="alert alert-danger" role="alert">@ViewBag.Error</div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
